syntax = "proto3";

service PeerServer {
    rpc MembershipStateSync (MembershipState) returns (MembershipState) {}
    rpc MembershipPing (Empty) returns (Ack) {}
    rpc MembershipPingReq (MembershipPingRequest) returns (Ack) {}
    rpc Coordinate (BatchRequest) returns (BatchResponse) {}
}

message MembershipState {
    string replica_id = 1;
    string peer_addr = 2;
    map<string, uint64> add_set = 3;
    map<string, uint64> remove_set = 4;
}

message MembershipPingRequest {
    string peer_name = 1;
    string peer_addr = 2;
}

message GetRequest {
    bytes key = 1;
}

message PutRequest {
    bytes key = 1;
    bytes value = 2;
}

message DeleteRequest {
    bytes key = 1;
}

message RequestUnion {
    oneof value {
        GetRequest get = 1;
        PutRequest put = 2;
        DeleteRequest delete = 3;
    }
}

message BatchRequest {
    string key = 1;
    repeated RequestUnion requests = 2;
}

message BatchResponse {
    string key = 1;
    map<string, string> returning = 4;
}

message Empty {}

message Ack {
    bool ack = 1;
}